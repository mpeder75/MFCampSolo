using System;
using System.Text.Json.Serialization;
using Order.Infrastructure.Outbox;

namespace Order.Infrastructure.Outbox
{
    public class OutboxMessage
    {
        public string Id { get; set; } // Auto-generated by RavenDB
        public string AggregateId { get; set; }
        public string EventType { get; set; }
        public string Payload { get; set; }
        public DateTime CreatedAt { get; set; } 
        public DateTime? ProcessedAt { get; set; }
        public string Status { get; set; } // "Pending", "Processed", "Failed"
        public int RetryCount { get; set; }

        [JsonIgnore]
        public bool IsProcessed => Status == OutboxStatus.Processed;

        public OutboxMessage()
        {
            // Required for serialization
        }

        public OutboxMessage(string aggregateId, string eventType, string payload)
        {
            AggregateId = aggregateId;
            EventType = eventType;
            Payload = payload;
            CreatedAt = DateTime.UtcNow;
            Status = OutboxStatus.Pending;
            RetryCount = 0;
        }
    }
}
